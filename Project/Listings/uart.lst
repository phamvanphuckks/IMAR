C51 COMPILER V9.60.0.0   UART                                                              03/13/2023 07:08:03 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\uart.c OPTIMIZE(7,SPEED) BROWSE INCDIR(.\inc;.\Library\Device\Includ
                    -e;.\Library\StdDriver\inc;..\Project) DEBUG OBJECTEXTEND PRINT(.\Listings\uart.lst) TABS(2) OBJECT(.\Objects\uart.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2020 nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          /*********************************************************************************************************
             -**/
   8          /*  Website: http://www.nuvoton.com                                                                       
             - */
   9          /*  E-Mail : MicroC-8bit@nuvoton.com                                                                      
             - */
  10          /*  Date   : Jan/21/2020                                                                                  
             - */
  11          /*********************************************************************************************************
             -**/
  12          #include "MS51_16K.H"
  13          #include "uart.h"
  14          
  15          bit PRINTFG = 0, uart0_receive_flag = 0, uart1_receive_flag;
  16          unsigned char uart0_receive_data, uart1_receive_data;
  17          
  18          // ring buffer
  19          volatile char xdata Rx_buffer[MAX_BUFFER];
  20          volatile uint16_t pHead = 0, pTail = 0;
  21          
  22          
  23          uint8_t IsAvailable(void)
  24          {
  25   1        return (uint16_t)(MAX_BUFFER + pHead - pTail) % MAX_BUFFER;
  26   1      }
  27          
  28          uint8_t IsFull(void) 
  29          {
  30   1        return (pHead + 1 == pTail);
  31   1      }
  32          
  33          void uartFresh(void)
  34          {
  35   1        pHead = 0;
  36   1        pTail = 0;
  37   1      
  38   1        memset(Rx_buffer, 0, MAX_BUFFER);
  39   1      }
  40          
  41          void uartResetNByte(void)
  42          {
  43   1        memset(&Rx_buffer[pHead - 13], 0, 13);
  44   1      }
C51 COMPILER V9.60.0.0   UART                                                              03/13/2023 07:08:03 PAGE 2   

  45          
  46          uint8_t IsEmpty(void) 
  47          {
  48   1          return (pHead == pTail);
  49   1      }
  50          
  51          unsigned char IsData(void) 
  52          {
  53   1        return Rx_buffer[pHead - 1];
  54   1      }
  55          
  56          void uartWriteByte(unsigned char item) 
  57          {
  58   1          if (IsFull()) 
  59   1          {
  60   2            return;
  61   2          }
  62   1      
  63   1          Rx_buffer[pHead++] = item;
  64   1          pHead %= MAX_BUFFER;
  65   1      }
  66          
  67          unsigned char uartReadByte(void) 
  68          {
  69   1          char item;
  70   1      
  71   1          if (IsEmpty()) 
  72   1          {
  73   2              return '\0';
  74   2          }
  75   1      
  76   1          item = Rx_buffer[pTail++];
  77   1          pTail %= MAX_BUFFER;
  78   1      
  79   1          return item;
  80   1      }
  81          
  82          void Serial_ISR(void) interrupt 4
  83          {
  84   1          _push_(SFRS);
  85   1        
  86   1          if (RI)
  87   1          {
  88   2              uart0_receive_flag = 1;
  89   2              uart0_receive_data = SBUF;
  90   2              uartWriteByte(uart0_receive_data);
  91   2              clr_SCON_RI;                                         // Clear RI (Receive Interrupt).
  92   2          }
  93   1      
  94   1          if (TI)
  95   1          {
  96   2              if (!PRINTFG)
  97   2              {
  98   3                  TI = 0;
  99   3              }
 100   2          }
 101   1      
 102   1          _pop_(SFRS);
 103   1      } 
 104          
 105          void SerialPort1_ISR(void) interrupt 15
 106          {
C51 COMPILER V9.60.0.0   UART                                                              03/13/2023 07:08:03 PAGE 3   

 107   1          _push_(SFRS);
 108   1        
 109   1          if (RI_1)
 110   1          {
 111   2              uart1_receive_data = SBUF_1;
 112   2              uart1_receive_flag = 1;
 113   2              clr_SCON_1_RI_1;                             /* clear reception flag for next reception */
 114   2          }
 115   1      
 116   1          if (TI_1 == 1)
 117   1          {
 118   2              if (!PRINTFG)
 119   2              {
 120   3                  clr_SCON_1_TI_1;                             /* if emission occur */
 121   3              }
 122   2          }
 123   1      
 124   1          _pop_(SFRS);
 125   1      }
 126          
 127          /*MS51 new version buadrate */
 128          void UART_Open(unsigned long u32SysClock, unsigned char u8UARTPort,unsigned long u32Baudrate)
 129          {
 130   1        switch(u8UARTPort)
 131   1        {
 132   2          case UART0_Timer1:
 133   2                SCON = 0x50;       //UART0 Mode1,REN=1,TI=1
 134   2                TMOD |= 0x20;      //Timer1 Mode1
 135   2                set_PCON_SMOD;          //UART0 Double Rate Enable
 136   2                set_CKCON_T1M;
 137   2                clr_T3CON_BRCK;          //Serial port 0 baud rate clock source = Timer1
 138   2                TH1 = 256 - (u32SysClock/16/u32Baudrate);
 139   2                set_TCON_TR1;
 140   2            break;
 141   2            
 142   2            case UART0_Timer3:
 143   2                SCON = 0x50;     //UART0 Mode1,REN=1,TI=1
 144   2                set_PCON_SMOD;        //UART0 Double Rate Enable
 145   2                T3CON &= 0xF8;   //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1)
 146   2                set_T3CON_BRCK;        //UART0 baud rate clock source = Timer3
 147   2                RH3    = HIBYTE(65536 - (u32SysClock/16/u32Baudrate));  
 148   2                RL3    = LOBYTE(65536 - (u32SysClock/16/u32Baudrate));  
 149   2                set_T3CON_TR3;         //Trigger Timer3
 150   2            break;
 151   2            
 152   2            case UART1_Timer3:
 153   2                SCON_1 = 0x50;     //UART1 Mode1,REN_1=1,TI_1=1
 154   2                T3CON = 0x80;     //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1), UART1 in MODE 1
 155   2                RH3    = HIBYTE(65536 - (u32SysClock/16/u32Baudrate));  
 156   2                RL3    = LOBYTE(65536 - (u32SysClock/16/u32Baudrate));     
 157   2                set_T3CON_TR3;             //Trigger Timer3                                                     
             -        
 158   2            break; 
 159   2        }
 160   1      }
 161          
 162          #if 0 
              unsigned char Receive_Data(unsigned char UARTPort)
              {
                  UINT8 c;
                  switch (UARTPort)
                  {
C51 COMPILER V9.60.0.0   UART                                                              03/13/2023 07:08:03 PAGE 4   

                    case UART0:
                      while (!RI);
                      c = SBUF;
                      RI = 0;
                    break;
                    case UART1:
                      while (!RI_1);
                      c = SBUF_1;
                      RI_1 = 0;
                    break;
                  }
                  return (c);
              }
              #endif
 182          
 183          void UART_Send_Data(UINT8 UARTPort, UINT8 c)
 184          {
 185   1          switch (UARTPort)
 186   1          {
 187   2            case UART0:
 188   2              SBUF = c;
 189   2            break;
 190   2            case UART1:
 191   2              SBUF_1 = c;
 192   2            break;
 193   2          }
 194   1      }
 195          
 196          void Enable_UART0_VCOM_printf_24M_115200(void)
 197          {
 198   1          P06_QUASI_MODE;
 199   1          UART_Open(24000000,UART0_Timer1,115200);
 200   1          ENABLE_UART0_PRINTF;
 201   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    714    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    128    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
