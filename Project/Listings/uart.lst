C51 COMPILER V9.60.0.0   UART                                                              03/19/2023 14:04:31 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\uart.c OPTIMIZE(7,SPEED) BROWSE INCDIR(.\inc;.\Library\Device\Includ
                    -e;.\Library\StdDriver\inc;..\Project) DEBUG OBJECTEXTEND PRINT(.\Listings\uart.lst) TABS(2) OBJECT(.\Objects\uart.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2020 nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          /*********************************************************************************************************
             -**/
   8          /*  Website: http://www.nuvoton.com                                                                       
             - */
   9          /*  E-Mail : MicroC-8bit@nuvoton.com                                                                      
             - */
  10          /*  Date   : Jan/21/2020                                                                                  
             - */
  11          /*********************************************************************************************************
             -**/
  12          #include "MS51_16K.H"
  13          #include "uart.h"
  14          
  15          bit PRINTFG = 0, uart0_receive_flag = 0, uart1_receive_flag;
  16          unsigned char uart0_receive_data, uart1_receive_data;
  17          
  18          // ring buffer
  19          volatile char xdata Rx_buffer[MAX_BUFFER];
  20          static uint16_t pHead = 0, pTail = 0;
  21          
  22          uint8_t IsAvailable(void)
  23          {
  24   1        return (uint16_t)(MAX_BUFFER + pHead - pTail) % MAX_BUFFER;
  25   1      }
  26          
  27          uint8_t IsFull(void) 
  28          {
  29   1        return (pHead + 1 == pTail);
  30   1      }
  31          
  32          void uartFresh(void)
  33          {
  34   1        pHead = 0;
  35   1        pTail = 0;
  36   1      
  37   1        memset(Rx_buffer, 0, MAX_BUFFER);
  38   1      }
  39          
  40          void uartResetNByte(uint8_t len)
  41          {
  42   1        memset(&Rx_buffer[pTail - len], 0, len);
  43   1      }
  44          
C51 COMPILER V9.60.0.0   UART                                                              03/19/2023 14:04:31 PAGE 2   

  45          uint8_t IsEmpty(void) 
  46          {
  47   1          return (pHead == pTail);
  48   1      }
  49          
  50          unsigned char IsData(void) 
  51          {
  52   1        return Rx_buffer[pHead - 1];
  53   1      }
  54          
  55          void uartWriteByte(unsigned char item) 
  56          {
  57   1          if (IsFull()) 
  58   1          {
  59   2            return;
  60   2          }
  61   1      
  62   1          Rx_buffer[pHead++] = item;
  63   1          pHead %= MAX_BUFFER;
  64   1      }
  65          
  66          unsigned char uartReadByte(void) 
  67          {
  68   1          char item;
  69   1      
  70   1          if (IsEmpty()) 
  71   1          {
  72   2              return '\0';
  73   2          }
  74   1      
  75   1          item = Rx_buffer[pTail++];
  76   1          pTail %= MAX_BUFFER;
  77   1      
  78   1          return item;
  79   1      }
  80          
  81          void Serial_ISR(void) interrupt 4
  82          {
  83   1          _push_(SFRS);
  84   1        
  85   1          if (RI)
  86   1          {
  87   2              uart0_receive_flag = 1;
  88   2              uart0_receive_data = SBUF;
  89   2              uartWriteByte(uart0_receive_data);
  90   2              clr_SCON_RI;                                         // Clear RI (Receive Interrupt).
  91   2          }
  92   1      
  93   1          if (TI)
  94   1          {
  95   2              if (!PRINTFG)
  96   2              {
  97   3                  TI = 0;
  98   3              }
  99   2          }
 100   1      
 101   1          _pop_(SFRS);
 102   1      } 
 103          
 104          void SerialPort1_ISR(void) interrupt 15
 105          {
 106   1          _push_(SFRS);
C51 COMPILER V9.60.0.0   UART                                                              03/19/2023 14:04:31 PAGE 3   

 107   1        
 108   1          if (RI_1)
 109   1          {
 110   2              uart1_receive_data = SBUF_1;
 111   2              uart1_receive_flag = 1;
 112   2              clr_SCON_1_RI_1;                             /* clear reception flag for next reception */
 113   2          }
 114   1      
 115   1          if (TI_1 == 1)
 116   1          {
 117   2              if (!PRINTFG)
 118   2              {
 119   3                  clr_SCON_1_TI_1;                             /* if emission occur */
 120   3              }
 121   2          }
 122   1      
 123   1          _pop_(SFRS);
 124   1      }
 125          
 126          /*MS51 new version buadrate */
 127          void UART_Open(unsigned long u32SysClock, unsigned char u8UARTPort,unsigned long u32Baudrate)
 128          {
 129   1        switch(u8UARTPort)
 130   1        {
 131   2          case UART0_Timer1:
 132   2                SCON = 0x50;       //UART0 Mode1,REN=1,TI=1
 133   2                TMOD |= 0x20;      //Timer1 Mode1
 134   2                set_PCON_SMOD;          //UART0 Double Rate Enable
 135   2                set_CKCON_T1M;
 136   2                clr_T3CON_BRCK;          //Serial port 0 baud rate clock source = Timer1
 137   2                TH1 = 256 - (u32SysClock/16/u32Baudrate);
 138   2                set_TCON_TR1;
 139   2            break;
 140   2            
 141   2            case UART0_Timer3:
 142   2                SCON = 0x50;     //UART0 Mode1,REN=1,TI=1
 143   2                set_PCON_SMOD;        //UART0 Double Rate Enable
 144   2                T3CON &= 0xF8;   //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1)
 145   2                set_T3CON_BRCK;        //UART0 baud rate clock source = Timer3
 146   2                RH3    = HIBYTE(65536 - (u32SysClock/16/u32Baudrate));  
 147   2                RL3    = LOBYTE(65536 - (u32SysClock/16/u32Baudrate));  
 148   2                set_T3CON_TR3;         //Trigger Timer3
 149   2            break;
 150   2            
 151   2            case UART1_Timer3:
 152   2                SCON_1 = 0x50;     //UART1 Mode1,REN_1=1,TI_1=1
 153   2                T3CON = 0x80;     //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1), UART1 in MODE 1
 154   2                RH3    = HIBYTE(65536 - (u32SysClock/16/u32Baudrate));  
 155   2                RL3    = LOBYTE(65536 - (u32SysClock/16/u32Baudrate));     
 156   2                set_T3CON_TR3;             //Trigger Timer3                                                     
             -        
 157   2            break; 
 158   2        }
 159   1      }
 160          
 161          #if 0 
              unsigned char Receive_Data(unsigned char UARTPort)
              {
                  UINT8 c;
                  switch (UARTPort)
                  {
                    case UART0:
C51 COMPILER V9.60.0.0   UART                                                              03/19/2023 14:04:31 PAGE 4   

                      while (!RI);
                      c = SBUF;
                      RI = 0;
                    break;
                    case UART1:
                      while (!RI_1);
                      c = SBUF_1;
                      RI_1 = 0;
                    break;
                  }
                  return (c);
              }
              #endif
 181          
 182          void UART_Send_Data(UINT8 UARTPort, UINT8 c)
 183          {
 184   1          switch (UARTPort)
 185   1          {
 186   2            case UART0:
 187   2              SBUF = c;
 188   2            break;
 189   2            case UART1:
 190   2              SBUF_1 = c;
 191   2            break;
 192   2          }
 193   1      }
 194          
 195          void Enable_UART0_VCOM_printf_24M_115200(void)
 196          {
 197   1          P06_QUASI_MODE;
 198   1          UART_Open(24000000,UART0_Timer1,115200);
 199   1          ENABLE_UART0_PRINTF;
 200   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    723    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    128    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
