C51 COMPILER V9.60.0.0   APP                                                               03/11/2023 08:58:34 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE APP
OBJECT MODULE PLACED IN .\Objects\app.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\app.c OPTIMIZE(7,SPEED) BROWSE INCDIR(.\inc;.\Library\Device\Include
                    -;.\Library\StdDriver\inc;..\Project) DEFINE(FOSC_240000) DEBUG OBJECTEXTEND PRINT(.\Listings\app.lst) TABS(2) OBJECT(.\O
                    -bjects\app.obj)

line level    source

   1          #include "app.h"
   2          
   3          /********************************************//**
   4           *   User variables
   5           ***********************************************/
   6          int xdata second, minute, hour, day, wday, month, year;
   7          RTC_time_t xdata rtc_time;
   8          RTC_date_t xdata rtc_date;
   9          
  10          typedef enum {
  11            NORMAL = 1,
  12            PASS_HOLD_3S,
  13            PASS_ALARM_5S
  14          } STATE_t;
  15          
  16          typedef enum {
  17            LOW = 0,
  18            HIGH,
  19          };
  20          
  21          static STATE_t state = NORMAL;
  22          
  23          /********************************************//**
  24           *   User functions
  25           ***********************************************/
  26          void app_init(void)
  27          {
  28   1        MODIFY_HIRC(HIRC_24);
  29   1        
  30   1        // Initialize GPIO
  31   1        GPIO_init();
  32   1        
  33   1        // Initialize UART
  34   1        uart_init();
  35   1        
  36   1        // Initialize delay - timer0
  37   1        Delay_init();
  38   1        
  39   1        /* init */
  40   1        DS1307_Init();
  41   1        
  42   1        rtc_date.day = MONDAY;
  43   1        rtc_date.date = 0;
  44   1        rtc_date.month = 0;
  45   1        rtc_date.year = 0;
  46   1      
  47   1        rtc_time.hours = 0;
  48   1        rtc_time.minutes = 0;
  49   1        rtc_time.seconds = 0;
  50   1        rtc_time.time_format = TIME_FORMAT_24HRS;
  51   1        DS1307_Set_Current_Time(&rtc_time);
  52   1        DS1307_Set_Current_Time(&rtc_date);
  53   1        
C51 COMPILER V9.60.0.0   APP                                                               03/11/2023 08:58:34 PAGE 2   

  54   1        check_btn_last_state();
  55   1      }
  56          
  57          void app_process_action(void)
  58          {
  59   1         check_button();
  60   1        
  61   1         ds1307();
  62   1      }
  63          
  64          void uart_init(void)
  65          {
  66   1        UART_Open(FREQ_SYS, UART0_Timer3, 9600);
  67   1        ENABLE_UART0_PRINTF;
  68   1        ENABLE_UART0_INTERRUPT;
  69   1        ENABLE_GLOBAL_INTERRUPT;  //ENABLE_GLOBAL_INTERRUPT
  70   1      }
  71          
  72          static void check_button(void)
  73          {
  74   1        uint16_t timeout = 0, last_state;
  75   1        
  76   1        if (state == NORMAL)
  77   1        {
  78   2          if(BTN2_PAS == HIGH)
  79   2          {
  80   3            LED_RELAY2 = HIGH;
  81   3            Delay_ms(10);
  82   3            while (BTN2_PAS == HIGH)
  83   3            {
  84   4              if(timeout == 3000)
  85   4              {  
  86   5                LED_RELAY1 = LOW;         
  87   5                LED_RELAY2 = HIGH;
  88   5                state = PASS_HOLD_3S;
  89   5                
  90   5                last_state = Read_APROM_BYTE(STATE_MODE);
  91   5                if( last_state != PASS_HOLD_3S)
  92   5                {
  93   6                  Write_DATAFLASH_BYTE(STATE_MODE, state);
  94   6                }
  95   5              }
  96   4              Delay_ms(1);
  97   4              timeout++;
  98   4            }
  99   3          }
 100   2          else 
 101   2          {
 102   3            LED_RELAY2 = (BTN1_COS == HIGH)? HIGH : LOW;
 103   3          }
 104   2        }
 105   1        
 106   1        if (state == PASS_HOLD_3S)
 107   1        {
 108   2          if(BTN2_PAS == HIGH)
 109   2          {
 110   3            LED_RELAY1 = HIGH;
 111   3            Delay_ms(10);
 112   3            
 113   3            timeout = 0;
 114   3            while (BTN2_PAS == HIGH)
 115   3            {
C51 COMPILER V9.60.0.0   APP                                                               03/11/2023 08:58:34 PAGE 3   

 116   4              if(timeout == 3000)
 117   4              {  
 118   5                LED_RELAY2 = LOW;
 119   5                  
 120   5                LED_RELAY1 = HIGH;
 121   5                Delay_ms(300);
 122   5                LED_RELAY1 = LOW;
 123   5                Delay_ms(300);
 124   5                LED_RELAY1 = HIGH;
 125   5                  
 126   5                state = NORMAL;
 127   5                
 128   5                last_state = Read_APROM_BYTE(STATE_MODE);
 129   5                if( last_state != NORMAL)
 130   5                {
 131   6                  Write_DATAFLASH_BYTE(STATE_MODE, state);
 132   6                }
 133   5              }
 134   4              Delay_ms(1);
 135   4              timeout++;
 136   4            }
 137   3          }
 138   2          else
 139   2          {
 140   3            LED_RELAY1 = 0;
 141   3          }
 142   2        }
 143   1      }
 144          
 145          void check_btn_last_state(void)
 146          {   
 147   1        uint8_t last_state;
 148   1        
 149   1        last_state = Read_APROM_BYTE(STATE_MODE);
 150   1        if(last_state != 0xFF)
 151   1        {
 152   2          state = last_state;
 153   2        }
 154   1        
 155   1        if(state == NORMAL)
 156   1        {
 157   2          LED_RELAY1 = 1;
 158   2          LED_RELAY2 = 0;   
 159   2        } 
 160   1        else if (state == PASS_HOLD_3S)
 161   1        {
 162   2          LED_RELAY1 = 0;
 163   2          LED_RELAY2 = 1;   
 164   2        }
 165   1        else {
 166   2          LED_RELAY1 = 1;
 167   2          LED_RELAY2 = 0;
 168   2        }
 169   1      }
 170          
 171          void ds1307(void)
 172          {
 173   1      
 174   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.60.0.0   APP                                                               03/11/2023 08:58:34 PAGE 4   

   CODE SIZE        =    362    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     22    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
